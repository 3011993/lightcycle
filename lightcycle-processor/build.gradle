buildscript {
  repositories { jcenter() }

  dependencies {
    classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.0'
  }
}

apply plugin: 'java'
apply plugin: 'provided-base'
apply plugin: 'maven'

group = GROUP
version = VERSION_NAME
// TODO name = POM_ARTIFACT_ID

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

dependencies {
  compile 'com.squareup:javawriter:2.1.2'
  compile project(':lightcycle-api')

  testCompile 'com.google.android:android:4.1.1.4'
  testCompile 'com.google.android:support-v4:r7'
  testCompile 'com.google.testing.compile:compile-testing:0.6'
  // compile-testing fails with JavacTool ClassNotFoundException, so add tools.jar manually
  // (this should be the correct cross-platform solution to do this)
  // cf. http://stackoverflow.com/questions/11345193/gradle-does-not-find-tools-jar
  testCompile files(((URLClassLoader) javax.tools.ToolProvider.getSystemToolClassLoader()).getURLs())
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task testJar(type: Jar) {
  classifier = 'tests'
  from sourceSets.test.output
  include '**/test/**/*.class'
}

artifacts {
  archives jar
  archives sourcesJar
  archives testJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: RELEASE_REPOSITORY_URL)
      snapshotRepository(url: SNAPSHOT_REPOSITORY_URL)
    }
  }
}
